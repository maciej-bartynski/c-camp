!function(){"use strict";document.addEventListener("DOMContentLoaded",function(){!function(s){var o,a=[],i=!1,r=!1,d={interval:250,force_process:!1},c=s(window);function l(){r=!1;for(var e=0;e<a.length;e++){var t=s(a[e]).filter(function(){return s(this).is(":appeared")});if(t.trigger("appear",[t]),o){var n=o.not(t);n.trigger("disappear",[n])}o=t}}s.expr[":"].appeared=function(e){var t=s(e);if(!t.is(":visible"))return!1;var n=c.scrollLeft(),o=c.scrollTop(),a=t.offset(),i=a.left,r=a.top;return r+t.height()>=o&&r-(t.data("appear-top-offset")||0)<=o+c.height()&&i+t.width()>=n&&i-(t.data("appear-left-offset")||0)<=n+c.width()},s.fn.extend({appear:function(e){var t=s.extend({},d,e||{}),n=this.selector||this;if(!i){var o=function(){r||(r=!0,setTimeout(l,t.interval))};s(window).scroll(o).resize(o),i=!0}return t.force_process&&setTimeout(l,t.interval),a.push(n),s(n)}}),s.extend({force_appear:function(){return!!i&&(l(),!0)}})}(jQuery),function(f){var g={},n="doTimeout",m=Array.prototype.slice;function o(e){var t,n=this,o={},a=e?f.fn:f,i=arguments,r=4,s=i[1],d=i[2],c=i[3];function l(){e?t.removeData(e):s&&delete g[s]}function u(){o.id=setTimeout(function(){o.fn()},d)}if("string"!=typeof s&&(r--,s=e=0,d=i[1],c=i[2]),e?(t=n.eq(0)).data(e,o=t.data(e)||{}):s&&(o=g[s]||(g[s]={})),o.id&&clearTimeout(o.id),delete o.id,c)o.fn=function(e){"string"==typeof c&&(c=a[c]),!0!==c.apply(n,m.call(i,r))||e?l():u()},u();else{if(o.fn)return void 0===d?l():o.fn(!1===d),!0;l()}}f[n]=function(){return o.apply(window,[0].concat(m.call(arguments)))},f.fn[n]=function(){var e=m.call(arguments),t=o.apply(this,[n+e[0]].concat(e));return"number"==typeof e[0]||"number"==typeof e[1]?this:t}}(jQuery),$(".animatedParent").appear(),$(".animatedClick").click(function(){var e=$(this).attr("data-target");if(null!=$(this).attr("data-sequence")){var t=$("."+e+":first").attr("data-id"),n=$("."+e+":last").attr("data-id"),o=t;$("."+e+"[data-id="+o+"]").hasClass("go")?($("."+e+"[data-id="+o+"]").addClass("goAway"),$("."+e+"[data-id="+o+"]").removeClass("go")):($("."+e+"[data-id="+o+"]").addClass("go"),$("."+e+"[data-id="+o+"]").removeClass("goAway")),o++,delay=Number($(this).attr("data-sequence")),$.doTimeout(delay,function(){if(console.log(n),$("."+e+"[data-id="+o+"]").hasClass("go")?($("."+e+"[data-id="+o+"]").addClass("goAway"),$("."+e+"[data-id="+o+"]").removeClass("go")):($("."+e+"[data-id="+o+"]").addClass("go"),$("."+e+"[data-id="+o+"]").removeClass("goAway")),++o<=n)return!0})}else $("."+e).hasClass("go")?($("."+e).addClass("goAway"),$("."+e).removeClass("go")):($("."+e).addClass("go"),$("."+e).removeClass("goAway"))}),$(document.body).on("appear",".animatedParent",function(e,t){var n=$(this).find(".animated"),o=$(this);if(null!=o.attr("data-sequence")){var a=$(this).find(".animated:first").attr("data-id"),i=$(this).find(".animated:last").attr("data-id");$(o).find(".animated[data-id="+a+"]").addClass("go"),a++,delay=Number(o.attr("data-sequence")),$.doTimeout(delay,function(){if($(o).find(".animated[data-id="+a+"]").addClass("go"),++a<=i)return!0})}else n.addClass("go")}),$(document.body).on("disappear",".animatedParent",function(e,t){$(this).hasClass("animateOnce")||$(this).find(".animated").removeClass("go")}),$(window).on("load",function(){$.force_appear()})}),document.addEventListener("DOMContentLoaded",function(){var o=document.querySelectorAll(".s2-origin-skills"),a=document.querySelector(".scroll-to-about");window.addEventListener("scroll",function e(){var t=document.querySelector(".page_main-nav nav").offsetHeight+100;if(window.scrollY>=a.offsetTop-t&&768<=window.innerWidth)for(var n=0;n<o.length;n++)o[n].classList.add("s2-bouncingAnimation"),window.removeEventListener("scroll",e,!1)},!1)});var o="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var e,f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=(function(e){var t,n;t=o,n=function(){var v=function(e){return e&&"getComputedStyle"in window&&"smooth"===window.getComputedStyle(e)["scroll-behavior"]};if("undefined"==typeof window||!("document"in window))return{};var o=function(d,n,c){n=n||999,c||0===c||(c=9);var t,l=function(e){t=e},u=function(){clearTimeout(t),l(0)},f=function(e){return Math.max(0,d.getTopOf(e)-c)},g=function(e,o,a){if(u(),0===o||o&&o<0||v(d.body))d.toY(e),a&&a();else{var i=d.getY(),r=Math.max(0,e)-i,s=(new Date).getTime();o=o||Math.min(Math.abs(r),n),function n(){l(setTimeout(function(){var e=Math.min(1,((new Date).getTime()-s)/o),t=Math.max(0,Math.floor(i+r*(e<.5?2*e*e:e*(4-2*e)-1)));d.toY(t),e<1&&d.getHeight()+t<d.body.scrollHeight?n():(setTimeout(u,99),a&&a())},9))}()}},m=function(e,t,n){g(f(e),t,n)};return{setup:function(e,t){return(0===e||e)&&(n=e),(0===t||t)&&(c=t),{defaultDuration:n,edgeOffset:c}},to:m,toY:g,intoView:function(e,t,n){var o=e.getBoundingClientRect().height,a=d.getTopOf(e)+o,i=d.getHeight(),r=d.getY(),s=r+i;f(e)<r||i<o+c?m(e,t,n):s<a+c?g(a-i+c,t,n):n&&n()},center:function(e,t,n,o){g(Math.max(0,d.getTopOf(e)-d.getHeight()/2+(n||e.getBoundingClientRect().height/2)),t,o)},stop:u,moving:function(){return!!t},getY:d.getY,getTopOf:d.getTopOf}},a=document.documentElement,t=function(){return window.scrollY||a.scrollTop},d=o({body:document.scrollingElement||document.body,toY:function(e){window.scrollTo(0,e)},getY:t,getHeight:function(){return window.innerHeight||a.clientHeight},getTopOf:function(e){return e.getBoundingClientRect().top+t()-a.offsetTop}});if(d.createScroller=function(t,e,n){return o({body:t,toY:function(e){t.scrollTop=e},getY:function(){return t.scrollTop},getHeight:function(){return Math.min(t.clientHeight,window.innerHeight||a.clientHeight)},getTopOf:function(e){return e.offsetTop}},e,n)},"addEventListener"in window&&!window.noZensmooth&&!v(document.body)){var c="history"in window&&"pushState"in history,l=c&&"scrollRestoration"in history;l&&(history.scrollRestoration="auto"),window.addEventListener("load",function(){l&&(setTimeout(function(){history.scrollRestoration="manual"},9),window.addEventListener("popstate",function(e){e.state&&"zenscrollY"in e.state&&d.toY(e.state.zenscrollY)},!1)),window.location.hash&&setTimeout(function(){var e=d.setup().edgeOffset;if(e){var t=document.getElementById(window.location.href.split("#")[1]);if(t){var n=Math.max(0,d.getTopOf(t)-e),o=d.getY()-n;0<=o&&o<9&&window.scrollTo(0,n)}}},9)},!1);var u=new RegExp("(^|\\s)noZensmooth(\\s|$)");window.addEventListener("click",function(e){for(var t=e.target;t&&"A"!==t.tagName;)t=t.parentNode;if(!(!t||1!==e.which||e.shiftKey||e.metaKey||e.ctrlKey||e.altKey)){if(l){var n=history.state&&"object"==f(history.state)?history.state:{};n.zenscrollY=d.getY();try{history.replaceState(n,"")}catch(e){}}var o=t.getAttribute("href")||"";if(0===o.indexOf("#")&&!u.test(t.className)){var a=0,i=document.getElementById(o.substring(1));if("#"!==o){if(!i)return;a=d.getTopOf(i)}e.preventDefault();var r=function(){window.location=o},s=d.setup().edgeOffset;s&&(a=Math.max(0,a-s),c&&(r=function(){history.pushState({},"",o)})),d.toY(a,null,r)}}},!1)}return d},e.exports?e.exports=n():function e(){document&&document.body?t.zenscroll=n():setTimeout(e,9)}()}(e={exports:{}},e.exports),e.exports),s={setSizeXY:function(e,t){var n=e.offsetWidth/e.offsetHeight;t.style.boxSizing="border-box",t.style.padding=0,t.style.margin=0;var o=t.offsetWidth,a=t.offsetHeight,i=o/a;n<i?(e.style.height=a+"px",e.style.width="auto"):i<n?(e.style.width=o+"px",e.style.height="auto"):i===n&&(e.style.height=a+"px",e.style.width="auto")},aToB:function(e,t){this.setSizeXY(e,t)},listen:function(e,t){this.setSizeXY(e,t),window.addEventListener("resize",function(){s.setSizeXY(e,t)})},cover:function(e,t){this.setSizeXY(e,t),this.listen(e,t)}};function d(e){var o=[];return e.forEach(function(e){var t=window.getComputedStyle(e.querySelector(".sn4_gallery-image")).getPropertyValue("background-image"),n=t.indexOf(".jpg")-1;o.push(t.charAt(n))}),o}document.addEventListener("DOMContentLoaded",function(){o=g(document.querySelectorAll(".sn4_nav_dot-btn")),a=document.querySelector(".sn4_gallery-wrapper"),o.forEach(function(t,n){t.addEventListener("click",function(){var e;o.forEach(function(e){return e.classList.remove("sn4_clicked")}),t.classList.add("sn4_clicked"),a.style.left=100*n*-1+"%",(e=a).parentNode.offsetWidth<=620&&r.to(e.parentNode)})}),u=document.querySelector(".sn4_nav"),f=window.pageYOffset,window.addEventListener("scroll",function(){if(u.parentNode.offsetWidth<=620){var e=window.pageYOffset;f<e==1?(r=e,s=document.querySelector(".sn4_gallery-wrapper"),d=s.offsetTop,c=d+s.offsetHeight,l=window.innerHeight/3*3,d<r&&r+l<c?document.querySelector(".sn4_nav").classList.add("sn4_nav_fixed"):document.querySelector(".sn4_nav").classList.remove("sn4_nav_fixed")):e<f==1&&(t=e,n=document.querySelector(".sn4_gallery-wrapper"),o=n.offsetTop,a=o+n.offsetHeight,i=window.innerHeight/3,t<o?document.querySelector(".sn4_nav").classList.remove("sn4_nav_fixed"):t<a-3*i&&o<t&&document.querySelector(".sn4_nav").classList.add("sn4_nav_fixed")),f=e}var t,n,o,a,i,r,s,d,c,l}),e=g(document.querySelectorAll(".sn4_container_gallery_img-positioner")),n=d(e),e.forEach(function(e,t){e.addEventListener("click",function(){!function(e,t){var n=e[t],o=document.createElement("div");o.classList.add("sn4_bigBG");var a=document.createElement("div");a.classList.add("sn4_bigBG_positioner");var i=document.createElement("img");i.setAttribute("src","./build/gallery/photo-"+n+".jpg"),o.appendChild(a),a.appendChild(i),document.body.appendChild(o),s.cover(i,a),function(e,t,a){c=t;var n=document.createElement("nav");n.classList.add("sn4_bigBG_nav"),e.appendChild(n);var i=document.createElement("div");i.classList.add("sn4_bigBG_nav_positioner"),n.appendChild(i);var o=[void 0,void 0,void 0],r=['<i class="fas fa-arrow-left"></i>','<i class="fas fa-times"></i>','<i class="fas fa-arrow-right"></i >'];o.forEach(function(e,t){(e=document.createElement("div")).classList.add("sn4_bigBG_nav_positioned-btn"),i.appendChild(e),e.innerHTML=r[t];var n=g(document.querySelectorAll(".sn4_container_gallery_img-positioner")),o=d(n);0===t?l(e,a,o,-1):1===t?e.addEventListener("click",function(){document.querySelector(".sn4_bigBG").classList.add("sn4_fade-out"),setTimeout(function(){document.body.removeChild(document.querySelector(".sn4_bigBG"))},300)}):2===t&&l(e,a,o,1)})}(o,t,i)}(n,t)})});var e,n;var u,f;var o,a});var c=void 0;function l(e,t,n,o){e.addEventListener("click",function(){(c+=o)===n.length?c=0:c<0&&(c=n.length-1),t.classList.remove("sn4_fade-out-in"),setTimeout(function(){t.classList.add("sn4_fade-out-in")},0),setTimeout(function(){t.setAttribute("src","./build/gallery/photo-"+n[c]+".jpg")},0)})}function g(e){for(var t=e.length,n=[],o=0;o<t;o++)n.push(e[o]);return n}function u(e){for(var t=e.length,n=[],o=0;o<t;o++)n.push(e[o]);return n}document.addEventListener("DOMContentLoaded",function(){i=document.querySelector(".page_main-nav nav").offsetHeight,document.querySelector(".page_main-nav").style.height=i+5+"px",window.addEventListener("resize",function(){var e=document.querySelector(".page_main-nav nav").offsetHeight;document.querySelector(".page_main-nav").style.height=e+5+"px"}),n=document.querySelector(".page_main-nav nav"),a=document.querySelector("div.page_main-nav"),window.addEventListener("scroll",function(){window.pageYOffset>a.offsetHeight?(setTimeout(function(){n.classList.add("page_main-nav_nav-sticky")},0),n.classList.add("page_main-nav_pretend-to-be-sticky")):(n.classList.remove("page_main-nav_nav-sticky"),n.classList.remove("page_main-nav_pretend-to-be-sticky"))}),e=u(document.querySelectorAll(".page_main-nav nav ul li")),o=[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"],e.forEach(function(e,n){e.addEventListener("click",function(){var e=document.querySelector(".page_main-nav nav").offsetHeight,t=document.querySelector(o[n]).offsetTop;r.toY(t-e)})}),t=window.pageYOffset,window.addEventListener("scroll",function(){var o,a,i,r,e=window.pageYOffset;t<e==1?(i=u(document.querySelectorAll(".page_main-nav nav ul li")),r=document.querySelector(".page_main-nav nav").offsetHeight,[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"].forEach(function(e,t){var n=document.querySelector(e);window.pageYOffset>=n.offsetTop-r-1&&window.pageYOffset<n.offsetTop+n.offsetHeight-r?i[t].classList.add("setonscroll"):i[t].classList.remove("setonscroll")})):e<t==1&&(o=u(document.querySelectorAll(".page_main-nav nav ul li")),a=document.querySelector(".page_main-nav nav").offsetHeight,[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"].forEach(function(e,t){var n=document.querySelector(e);window.pageYOffset<n.offsetTop+n.offsetHeight-a-300&&window.pageYOffset>n.offsetTop-a-299?o[t].classList.add("setonscroll"):o[t].classList.remove("setonscroll")})),t=e});var t;var e,o;var n,a;var i}),document.addEventListener("DOMContentLoaded",function(){document.querySelector(".s1_bar_button-to-go").addEventListener("click",function(){var e=document.querySelector(".scroll-to-about").offsetTop-document.querySelector("nav").offsetHeight;r.toY(e)})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
